///<reference path="../../node_modules/tsd-goalazo-models/models.d.ts"/>
///<reference path="../../typings/bluebird/bluebird.d.ts"/>


import ICompetitionSeries = goalazo.ICompetitionSeries;

import P = require('bluebird');
import Models from '../../models/index';
import {ICompetitionSeriesInstance,
    IUserInstance,
    IFilterInstance} from "../../typings/custom/models";
import IUser = goalazo.IUser;
import ICompetition = goalazo.ICompetition;
import IFilter = goalazo.IFilter;
import {Model} from "sequelize";
import {BaseRepo} from "../BaseRepo";
import {ITransaction} from "../../typings/custom/db";

export class UserRepoUno extends BaseRepo {

    getUser(name: string): Promise<IUserInstance> {


        return P.resolve()
            .then(() => Models.User.find({
                where: {
                    name: name
                }
            }));
    }

    setUser(isAutoGenerated, name: string, password?: string): Promise<IUserInstance> {

        return P.resolve()
            .then(() => Models.User.create({
                name,
                password,
                isAutoGenerated
            }))
    }

    getUserFilters(userId: number, limit: number): Promise<Array<IFilterInstance>> {

        return P.resolve()
            .then(() => Models.Filter.findAll({
                include: [
                    {
                        model: Models.User,
                        as: 'users',
                        where: {
                            id: userId
                        }
                    }
                ],
                limit: limit
            }))
            .then((filters: Array<IFilterInstance>) => filters.map(filter => {

                filter = <any>filter.get();
                delete filter['users'];

                return filter;
            }))
            ;
    }

    setUserFilter(userId: number, filterId: number, transaction: ITransaction): Promise<any> {

        return P.resolve()
            .then(() => Models.UserFilter.create({userId, filterId}, {transaction}));
    }
}
